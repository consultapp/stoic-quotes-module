{"mappings":"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","sources":["src/index.js","src/Stoic.class.ts","src/fixtures.ts"],"sourcesContent":["import Stoic from \"./Stoic.class\";\n\nexport { Stoic };\n","import {\n  LOADING_STATUS,\n  MESSAGE_TYPES,\n  MINIMUM_QUOTES_POOL_LENGTH,\n} from \"./fixtures\";\nconst initialParams: Params = {\n  positionX: \"center\",\n  positionY: \"center\",\n  baseClassName: \"stoic\",\n  delay: \"60\",\n  serverApi: \"https://stoicquotes.ru/random\",\n};\n\n// Singletone Class\nclass Stoic {\n  static instance: Stoic;\n  private quotes: Quote[] = [];\n  private loadingStatus: LOADING_STATUS = LOADING_STATUS.idle;\n  private waitTimeout = 0;\n  private quoteElement: HTMLElement | null = null;\n  private authorElement: HTMLElement | null = null;\n  private interval: number = 0;\n\n  constructor(private params: Params = initialParams) {\n    if (Stoic.instance) {\n      Stoic.instance.#updateParams(params);\n      return Stoic.instance;\n    }\n\n    this.params = { ...initialParams };\n    this.#updateParams(params);\n    Stoic.instance = this;\n\n    this.#waitForQuote();\n\n    if (!params.root) {\n      this.#getOuterTemplate();\n      this.#setPosition();\n      this.#append();\n    } else this.#setInnerTemplate();\n\n    this.#initListeners();\n    this.play();\n    this.#showLoading();\n  }\n\n  nextQuote() {\n    this.#hideContent();\n    setTimeout(() => {\n      this.#fillQuotesPool();\n      this.#waitForQuote();\n    }, 400);\n  }\n\n  hide() {\n    this.params.root?.classList.add(`${this.params.baseClassName}_hide`);\n  }\n\n  show() {\n    this.params.root?.classList.remove(`${this.params.baseClassName}_hide`);\n  }\n\n  play() {\n    this.stop();\n    if (this.params.delay)\n      this.interval = setInterval(() => {\n        this.nextQuote();\n      }, parseInt(this.params.delay) * 1000);\n  }\n  stop() {\n    clearInterval(this.interval);\n    this.interval = 0;\n  }\n  reset() {\n    this.stop();\n    this.play();\n  }\n\n  #setInnerTemplate() {\n    if (this.params.root) {\n      this.params.root.innerHTML = `\n            <div class=\"${this.params.baseClassName}__content\">\n              <backquote class=\"${this.params.baseClassName}__backquote\"></backquote>\n              <p class=\"${this.params.baseClassName}__author\"></p>\n            </div>\n            <div class=\"${this.params.baseClassName}__loader skeleton\">\n              <div class=\"skeleton__group\">\n                <div class=\"skeleton__bar skeleton__bar_full\"></div>\n                <div class=\"skeleton__bar skeleton__bar_full\"></div>\n                <div class=\"skeleton__bar skeleton__bar_big\"></div>\n              </div>\n              <div class=\"skeleton__bar skeleton__bar_small\"></div>\n            </div>\n            \n            <div class=\"${this.params.baseClassName}__controlls\">\n              <svg id=\"next\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"transparent\"  stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" >\n                <path d=\"M5 12h14\"/><path d=\"m12 5 7 7-7 7\"/></svg>\n              <svg id=\"close\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"transparent\" stroke=\"currentColor\" stroke-width=\"1.5\" >\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6 18 18 6M6 6l12 12\" /></svg>\n            </div>\n`;\n      this.quoteElement = this.params.root.querySelector(\n        \"backquote\"\n      ) as HTMLElement;\n      this.authorElement = this.params.root.querySelector(\"p\") as HTMLElement;\n    }\n  }\n\n  #getOuterTemplate() {\n    const wrapper = document.createElement(\"div\");\n    wrapper.innerHTML = `<div class=\"${this.params.baseClassName}\"></div>`;\n    this.params.root = wrapper?.children[0] as HTMLDivElement;\n    this.#setInnerTemplate();\n  }\n\n  #initListeners() {\n    this.params.root\n      ?.querySelector(\"[id='close']\")\n      ?.addEventListener(\"pointerup\", () => {\n        this.hide();\n      });\n    this.params.root\n      ?.querySelector(\"[id='next']\")\n      ?.addEventListener(\"pointerup\", () => {\n        this.reset();\n        this.nextQuote();\n      });\n  }\n\n  #append() {\n    if (this.params.root instanceof Node)\n      document.body.append(this.params.root);\n  }\n\n  #setPosition() {\n    this.#resetPositions();\n    this.#setPositionX();\n    this.#setPositionY();\n  }\n\n  #updateParams(params: Params = initialParams) {\n    this.params = { ...this.params, ...params };\n    this.#setPosition();\n  }\n\n  #setPositionX() {\n    if (this.params.root?.classList) {\n      this.params.root?.classList.remove(`${this.params.baseClassName}_left`);\n      this.params.root?.classList.remove(`${this.params.baseClassName}_right`);\n\n      switch (this.params.positionX) {\n        case \"left\":\n          this.params.root?.classList.add(`${this.params.baseClassName}_left`);\n          break;\n        case \"right\":\n          this.params.root?.classList.add(`${this.params.baseClassName}_right`);\n          break;\n      }\n    }\n  }\n\n  #setPositionY() {\n    if (this.params.root?.classList) {\n      this.params.root?.classList.remove(`${this.params.baseClassName}_top`);\n      this.params.root?.classList.remove(`${this.params.baseClassName}_bottom`);\n      switch (this.params.positionY) {\n        case \"top\":\n          this.params.root?.classList.add(`${this.params.baseClassName}_top`);\n          break;\n        case \"bottom\":\n          this.params.root?.classList.add(\n            `${this.params.baseClassName}_bottom`\n          );\n          break;\n      }\n    }\n  }\n\n  #waitForQuote() {\n    clearTimeout(this.waitTimeout);\n\n    if (this.quotes.length) return this.#showQuote();\n    this.#showLoading();\n\n    this.waitTimeout = setTimeout(() => {\n      switch (this.loadingStatus) {\n        case LOADING_STATUS.pending:\n          this.#waitForQuote();\n          break;\n\n        case LOADING_STATUS.idle:\n          this.#fillQuotesPool();\n          this.#waitForQuote();\n          break;\n\n        case LOADING_STATUS.error:\n          this.#showError();\n          break;\n\n        case LOADING_STATUS.loaded:\n          this.#showQuote();\n          break;\n\n        default:\n          break;\n      }\n    }, 200);\n  }\n\n  #showQuote() {\n    if (this.quotes.length) {\n      this.#setContent(this.quotes.shift());\n      this.#showContent();\n      this.#hideLoading();\n    }\n  }\n  #showError() {}\n\n  #hideContent() {\n    this.params.root?.classList.remove(\n      `${this.params.baseClassName}_showContent`\n    );\n    this.params.root?.classList.add(`${this.params.baseClassName}_hideContent`);\n  }\n\n  #showContent() {\n    this.params.root?.classList.remove(\n      `${this.params.baseClassName}_hideContent`\n    );\n    this.params.root?.classList.add(`${this.params.baseClassName}_showContent`);\n  }\n\n  #showLoading() {\n    this.params.root?.classList.add(`${this.params.baseClassName}_loading`);\n  }\n\n  #hideLoading() {\n    this.params.root?.classList.remove(`${this.params.baseClassName}_loading`);\n  }\n\n  #setContent(quote: Quote | undefined) {\n    if (quote) {\n      if (this.quoteElement) this.quoteElement.innerHTML = quote.text;\n      if (this.authorElement) this.authorElement.innerHTML = quote.author;\n    }\n  }\n\n  #resetPositions() {\n    const positions = [\"_left\", \"_right\", \"_top\", \"_bottom\"];\n    if (this.params.root?.classList)\n      positions.forEach((p) =>\n        this.params.root?.classList.remove(`${this.params.baseClassName}${p}`)\n      );\n  }\n\n  #fillQuotesPool() {\n    for (let i = this.quotes.length; i < MINIMUM_QUOTES_POOL_LENGTH; i++)\n      this.#loadRandomQuote();\n  }\n\n  #loadRandomQuote() {\n    this.loadingStatus = LOADING_STATUS.pending;\n    fetch(this.params.serverApi)\n      .then((data) => data.json())\n      .then((message: ApiMessage) => {\n        if (!message || message?.type === MESSAGE_TYPES.error) {\n          this.loadingStatus = LOADING_STATUS.error;\n          return;\n        }\n\n        if (message && message?.type === MESSAGE_TYPES.quote) {\n          this.loadingStatus = LOADING_STATUS.loaded;\n          this.quotes.push(message as Quote);\n          return;\n        }\n      })\n      .catch(() => {\n        this.loadingStatus = LOADING_STATUS.error;\n      });\n  }\n}\n\nexport default Stoic;\n","export const LOADING_STATUS = {\n  idle: \"idle\",\n  pending: \"pending\",\n  loaded: \"loaded\",\n  error: \"error\",\n} as const;\n\nexport const MESSAGE_TYPES = {\n  error: \"error\",\n  quote: \"quote\",\n  status: \"status\",\n} as const;\n\nexport const MINIMUM_QUOTES_POOL_LENGTH = 5;\n"],"names":[],"version":3,"file":"stoic.js.map","sourceRoot":"../../"}